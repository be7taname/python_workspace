'''
Created on Sep 13, 2015

@author: mianmianba
'''

from common.TreeNode import TreeNode
from common.ListNode import ListNode
class SortedListToBST(object):
    def genBstFromList(self, listHead, listLen):
        if listLen == 1:
            tn = TreeNode()
            tn.val = listHead.val
            listHead = listHead.next
            return tn
        else:
            
            
        
        
    def solution(self, head):
        """
        :type head: ListNode
        :rtype: TreeNode
        """
        thisListNode = head
        listNodeCnt = 0
        while thisListNode != None:
            listNodeCnt += 1
            thisListNode = thisListNode.next
        leftTree = genBstFromList(head, listNodeCnt/2)