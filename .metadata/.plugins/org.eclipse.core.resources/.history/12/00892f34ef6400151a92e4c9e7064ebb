'''
Created on Sep 24, 2015

@author: mianmianba
'''

class Calculate(object):
    def compEqu(self, equStack, equSymbol, flag):
        if not equStack:
            equStack.append(equSymbol)
        if equStack.peek() == '*':
            equStack.pop()
            val1 = int(equStack.pop())
            equStack.append(str(val1 * int(equSymbol)))
        elif equStack.peek() == '/':
            equStack.pop()
            val1 = int(equStack.pop())
            equStack.append(str(val1 / int(equSymbol)))
        elif equStack.peek() == '+' or equStack.peek() == '-':
            if len(equStack) == 4:
                op = equStack.pop()
                val2 = int(equStack.pop())
                if equStack.pop() == '+':
                    equStack.append(str(int(equStack.pop()) + val2))
                elif equStack.pop() == '-':
                    equStack.append(str(int(equStack.pop()) - val2))
        
    def solution(self, s):
        """
        :type s: str
        :rtype: int
        """
        strLen = len(s)
        cnt = 0
        while cnt < strLen:
            cc = s[cnt]
            if cc >= '0' and cc <= '9':
                curNumStr = cc
                cnt = cnt + 1
                while cnt < strLen: # either (cc is not a number) or (cnt == strLen and cc is a number) 
                    cc = s[cnt]
                    if cc >= '0' and cc <= '9':
                        curNumStr += cc
                        cnt += 1
                    else:
                        break
                