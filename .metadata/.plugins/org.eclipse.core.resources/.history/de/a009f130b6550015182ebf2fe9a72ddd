'''
Created on Aug 30, 2015

@author: mianmianba
'''
import argparse

titleNum = -5;

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-n', '--title_num', type = int, help = 'the title number of the problem of LeetCode',
                        default = 1)
    args = parser.parse_args()
    print "title number given by argument is {}".format(args.title_num)
    titleNum = args.title_num

print "module name is {}".format(__name__)
print "title number to be used is {}".format(titleNum)

if titleNum == 1:
    from TwoSum import TwoSum # Two Sum, Hard
    ts = TwoSum()
    print ts.solution([2, 7, 11, 15], 9)
elif titleNum == 5:
    from LongestPalindromicSubstring import LongestPalindrome
    lp = LongestPalindrome() # Longest Palindromic Substring, 
    print lp.solutionRecursive('bb') # recursive solution is good, but there is better one, Hard
elif titleNum == 11:
    from MaxArea import MaxArea # Container With Most Water, Hard
elif titleNum == 134:
    from GasStation import CanCompleteCircuit # Gas Station, Hard
elif titleNum == 200:
    from NumberOfIslands import NumIslands # Number of Islands, Hard
else:
    from common.TreeNode import TreeNode, genTree, genTreeNoVal
    root = genTree([1, 2, 3, 4, 5, 7, 10, 11, 14], [8, 3, 10, 1, 6, 14, 4, 7, 13])
    root.printTree()
    root.printTreeNodeVal()
    print 'Do nothing'
    
