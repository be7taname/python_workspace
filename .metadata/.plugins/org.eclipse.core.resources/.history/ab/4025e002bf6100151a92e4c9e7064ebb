'''
Created on Sep 22, 2015

@author: mianmianba
'''

class LadderLength(object):
    def diffOne(self, word1, word2, wordLen):
        numDiff = 0
        for i in range(wordLen):
            if word1[i] != word2[i]:
                if numDiff == 0:
                    numDiff = 1
                else:
                    return False
        return False if numDiff == 0 else True
        
    def solution(self, beginWord, endWord, wordList):
        """
        :type beginWord: str
        :type endWord: str
        :type wordList: Set[str]
        :rtype: int
        """
        wordLen = len(beginWord)
        curList = []
        remainList = []
        for word in wordList:
            if self.diffOne(word, beginWord, wordLen):
                if self.diffOne(word, endWord, wordLen):
                    return 3
                else:
                    curList.append(word)
            else:
                remainList.append(word)
        nxtList = []
        while remainList:
            for word in remainList:
        
        
        wordTreeQ = [beginWord]
        curLastWord = beginWord
        tranLen = 0
        while wordTreeQ:
            curWord = wordTreeQ.pop(0)
            if curWord == endWord: 
                return tranLen + 1
            for word in wordList:
                if self.diffOne(word, curWord, wordLen):
                    wordTreeQ.append(word)
                    nxtLastWord = word
            
        
        