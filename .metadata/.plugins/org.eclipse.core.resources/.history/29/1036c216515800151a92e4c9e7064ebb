'''
Created on Sep 10, 2015

@author: mianmianba
'''

class MaxSubArray(object):
    def solutions(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        numsLen = len(nums)
        if numsLen == 1: return nums[0]
        pmax = self.solutions(nums[1:numsLen])
        if nums[0] < 0:
            return (nums[0] if nums[0] > pmax else pmax)
        else:
            cumsum = []
            a = 0
            for i in range(len(nums)):
                a += nums[i]
                cumsum.append(a)
            cmax = max(cumsum)
            return (cmax if cmax > pmax else pmax)    
        
    def solutionFast(self, nums):
        findPos = 0
        max = nums[0]
        existPos = 0
        for i in range(len(nums)):
            if findPos == 0:
                if nums[i] > 0:
                    existPos = 1
                    findPos = 1
                    startPos = i
                    lastPos = i
                    cumsum = nums[i]
            else:
                if nums[i] > 0:
                    lastPos = i
                    cumsum += nums[i]
            if existPos == 0:
                if nums[i] > max: max = nums[i]
            